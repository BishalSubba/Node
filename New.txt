To include this configuration in a main project's `CMakeLists.txt` file, you should encapsulate the provided CMake commands into a separate CMake file and then include this file in the main project's `CMakeLists.txt`. Hereâ€™s how you can do it:

### Step 1: Create a Separate CMake Configuration File

Save the provided configuration in a separate file, for example, `SkyplotWidgetConfig.cmake`:

```cmake
# SkyplotWidgetConfig.cmake

# Set the project name and version
project(SkyplotWidget VERSION 2.0.1)

# Specify the C++ standard
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED True)

# Add include directories
include_directories(${CMAKE_CURRENT_LIST_DIR}/include)

# Specify the header and source files
set(HEADERS
    ${CMAKE_CURRENT_LIST_DIR}/include/SkyplotWidget.h
    ${CMAKE_CURRENT_LIST_DIR}/include/SkyplotWidget_global.h
)

set(SOURCES
    ${CMAKE_CURRENT_LIST_DIR}/src/SkyplotWidget.cpp
)

# Add the executable or library
add_library(SkyplotWidget STATIC ${SOURCES} ${HEADERS})

# Add compiler flags
if(UNIX)
    add_compile_options(-Werror -Wextra)
endif()

# Add definitions
add_definitions(
    -D_SKP_VERSION="${PROJECT_VERSION}"
    -D_SKP_VERSION_MAJ=${PROJECT_VERSION_MAJOR}
    -D_SKP_VERSION_MIN=${PROJECT_VERSION_MINOR}
    -D_SKP_VERSION_PAT=1
)

# Enable compiler warnings
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall")
```

### Step 2: Include This Configuration in Your Main `CMakeLists.txt`

In the main project's `CMakeLists.txt` file, include the `SkyplotWidgetConfig.cmake` file:

```cmake
cmake_minimum_required(VERSION 3.0)

# Set the main project name
project(MainProject)

# Add the subdirectory where SkyplotWidgetConfig.cmake is located
add_subdirectory(path/to/SkyplotWidget)

# Optionally, if you want to use SkyplotWidget in the main project:
# add_executable(MainExecutable main.cpp)
# target_link_libraries(MainExecutable PRIVATE SkyplotWidget)
```

### Explanation:

1. **SkyplotWidgetConfig.cmake**: Contains the specific configuration for the SkyplotWidget component. Note that the paths are set relative to the directory containing this CMake file using `CMAKE_CURRENT_LIST_DIR`.
2. **Main `CMakeLists.txt`**: 
   - Use `add_subdirectory` to include the `SkyplotWidgetConfig.cmake` in your main project.
   - If you want to use the `SkyplotWidget` library in an executable within your main project, add the executable and link it to the `SkyplotWidget` library.

Make sure to adjust `path/to/SkyplotWidget` to the actual path where the `SkyplotWidgetConfig.cmake` is located.
